## This file autogenerated by BinaryProvider.write_deps_file().
## Do not edit.
##
## Include this file within your main top-level source, and call
## `check_deps()` from within your module's `__init__()` method

if isdefined((@static VERSION < v"0.7.0-DEV.484" ? current_module() : @__MODULE__), :Compat)
    import Compat.Libdl
elseif VERSION >= v"0.7.0-DEV.3382"
    import Libdl
end
const libnettle = joinpath(dirname(@__FILE__), "usr/lib/libnettle.so")
const nettle_hash = joinpath(dirname(@__FILE__), "usr/bin/nettle-hash")
function check_deps()
    global libnettle
    if !isfile(libnettle)
        error("$(libnettle) does not exist, Please re-run Pkg.build(\"Nettle\"), and restart Julia.")
    end

    if Libdl.dlopen_e(libnettle) in (C_NULL, nothing)
        error("$(libnettle) cannot be opened, Please re-run Pkg.build(\"Nettle\"), and restart Julia.")
    end

    global nettle_hash
    if !isfile(nettle_hash)
        error("$(nettle_hash) does not exist, Please re-run Pkg.build(\"Nettle\"), and restart Julia.")
    end

    libpaths = split(get(ENV, "LD_LIBRARY_PATH", ""), ":")
    if !("/usr/bin/../lib/julia" in libpaths)
        push!(libpaths, "/usr/bin/../lib/julia")
    end
    ENV["LD_LIBRARY_PATH"] = join(filter(!isempty, libpaths), ":")

end
